{"ast":null,"code":"var _jsxFileName = \"/Users/cameron/Documents/ProgrammingLearning/Courses/Claim/RealEstate/dreamhomes/src/pages/SignIn.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignIn(props) {\n  _s();\n  const navigator = useNavigate();\n  //this function is designed to handle any changes that occur within the form's input fields. \n  //it's triggerd whenever the user types in an input\n  const signInChangeHandler = event => {\n    //get the name attribute of the input field\n    const name = event.target.name;\n    let value;\n    value = event.target.value;\n\n    //create a copy of the user object from props\n    //we create a tempuser object because we never want to directly modify the original prop user object\n    const tempUser = {\n      ...props.user\n    };\n\n    //update the corresponding property in the temporary user object with the new value\n    tempUser[name] = value;\n    console.log(\"Updated user object\", tempUser);\n\n    //update the state with the modified user object\n    props.setUser(tempUser);\n    console.log(\"User state updated with new value\");\n  };\n  //this function is called when the user click the submit button\n  const signInSubmitHandler = () => {\n    //make a post request to the server with the user data\n    axios.post(\"http://localhost:8080/signin\", props.user)\n    //defines what happens if the server responds successfully to the post request\n    .then(response => {\n      //stores the user's id(which might be part of the data returned by the server in response.data) in the browsers local storage. this is helpful to keep track of the logged-in user\n      localStorage.setItem(\"userID\", response.data.id); //store the user id in local storage\n      //update the user state in the parent component with the data received from the server's response\n      props.setUser(response.data);\n      navigator(\"/\");\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sign in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"email\",\n      type: \"email\",\n      value: props.user.email,\n      onChange: signInChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"password\",\n      type: \"password\",\n      value: props.user.password,\n      onChange: signInChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: signInSubmitHandler,\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(SignIn, \"xOedpSdHJaJ+FqfJAlnlXqaoW+E=\", false, function () {\n  return [useNavigate];\n});\n_c = SignIn;\nexport default SignIn;\nvar _c;\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["React","axios","useNavigate","jsxDEV","_jsxDEV","SignIn","props","_s","navigator","signInChangeHandler","event","name","target","value","tempUser","user","console","log","setUser","signInSubmitHandler","post","then","response","localStorage","setItem","data","id","catch","e","children","fileName","_jsxFileName","lineNumber","columnNumber","type","email","onChange","password","onClick","_c","$RefreshReg$"],"sources":["/Users/cameron/Documents/ProgrammingLearning/Courses/Claim/RealEstate/dreamhomes/src/pages/SignIn.js"],"sourcesContent":["import React from 'react'\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nfunction SignIn(props) {\n    const navigator = useNavigate();\n    //this function is designed to handle any changes that occur within the form's input fields. \n    //it's triggerd whenever the user types in an input\n    const signInChangeHandler = (event) => {\n\n    //get the name attribute of the input field\n    const name = event.target.name;\n    let value;\n    value = event.target.value;\n\n    //create a copy of the user object from props\n    //we create a tempuser object because we never want to directly modify the original prop user object\n    const tempUser = {...props.user};\n\n    //update the corresponding property in the temporary user object with the new value\n    tempUser[name] = value;\n    console.log(\"Updated user object\", tempUser);\n\n    //update the state with the modified user object\n    props.setUser(tempUser);\n    console.log(\"User state updated with new value\");\n    };\n    //this function is called when the user click the submit button\n    const signInSubmitHandler = () => {\n        //make a post request to the server with the user data\n        axios.post(\"http://localhost:8080/signin\", props.user)\n        //defines what happens if the server responds successfully to the post request\n        .then((response) => {\n            //stores the user's id(which might be part of the data returned by the server in response.data) in the browsers local storage. this is helpful to keep track of the logged-in user\n            localStorage.setItem(\"userID\", response.data.id); //store the user id in local storage\n          //update the user state in the parent component with the data received from the server's response\n          props.setUser(response.data);\n          navigator(\"/\");\n\n        })\n        .catch((e) => {\n          console.log(e);\n        })\n\n\n    };\n\n\n\n\n    \n  return (\n   \n    <div>\n      <h1>Sign in</h1>\n\n      <label>Email</label>\n      <input name='email' type='email' value={props.user.email} onChange={signInChangeHandler}/>\n      <label>Password</label>\n      <input name='password' type='password' value={props.user.password} onChange={signInChangeHandler}/>\n\n    <button onClick={signInSubmitHandler}>Sign Up</button>\n\n    </div>\n\n\n  )\n}\n\nexport default SignIn"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,MAAMA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACnB,MAAMC,SAAS,GAAGN,WAAW,CAAC,CAAC;EAC/B;EACA;EACA,MAAMO,mBAAmB,GAAIC,KAAK,IAAK;IAEvC;IACA,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACD,IAAI;IAC9B,IAAIE,KAAK;IACTA,KAAK,GAAGH,KAAK,CAACE,MAAM,CAACC,KAAK;;IAE1B;IACA;IACA,MAAMC,QAAQ,GAAG;MAAC,GAAGR,KAAK,CAACS;IAAI,CAAC;;IAEhC;IACAD,QAAQ,CAACH,IAAI,CAAC,GAAGE,KAAK;IACtBG,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEH,QAAQ,CAAC;;IAE5C;IACAR,KAAK,CAACY,OAAO,CAACJ,QAAQ,CAAC;IACvBE,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;EAChD,CAAC;EACD;EACA,MAAME,mBAAmB,GAAGA,CAAA,KAAM;IAC9B;IACAlB,KAAK,CAACmB,IAAI,CAAC,8BAA8B,EAAEd,KAAK,CAACS,IAAI;IACrD;IAAA,CACCM,IAAI,CAAEC,QAAQ,IAAK;MAChB;MACAC,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEF,QAAQ,CAACG,IAAI,CAACC,EAAE,CAAC,CAAC,CAAC;MACpD;MACApB,KAAK,CAACY,OAAO,CAACI,QAAQ,CAACG,IAAI,CAAC;MAC5BjB,SAAS,CAAC,GAAG,CAAC;IAEhB,CAAC,CAAC,CACDmB,KAAK,CAAEC,CAAC,IAAK;MACZZ,OAAO,CAACC,GAAG,CAACW,CAAC,CAAC;IAChB,CAAC,CAAC;EAGN,CAAC;EAMH,oBAEExB,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAAyB,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEhB7B,OAAA;MAAAyB,QAAA,EAAO;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACpB7B,OAAA;MAAOO,IAAI,EAAC,OAAO;MAACuB,IAAI,EAAC,OAAO;MAACrB,KAAK,EAAEP,KAAK,CAACS,IAAI,CAACoB,KAAM;MAACC,QAAQ,EAAE3B;IAAoB;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC1F7B,OAAA;MAAAyB,QAAA,EAAO;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACvB7B,OAAA;MAAOO,IAAI,EAAC,UAAU;MAACuB,IAAI,EAAC,UAAU;MAACrB,KAAK,EAAEP,KAAK,CAACS,IAAI,CAACsB,QAAS;MAACD,QAAQ,EAAE3B;IAAoB;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAErG7B,OAAA;MAAQkC,OAAO,EAAEnB,mBAAoB;MAAAU,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEjD,CAAC;AAIV;AAAC1B,EAAA,CA/DQF,MAAM;EAAA,QACOH,WAAW;AAAA;AAAAqC,EAAA,GADxBlC,MAAM;AAiEf,eAAeA,MAAM;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}